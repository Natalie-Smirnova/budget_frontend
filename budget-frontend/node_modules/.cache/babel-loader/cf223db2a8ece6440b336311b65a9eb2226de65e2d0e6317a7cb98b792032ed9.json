{"ast":null,"code":"var _jsxFileName = \"/Users/natallia_smirnova/WebstormProjects/Budget_frontend/budget_frontend/budget-frontend/src/features/Auth/Register/Register.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Grid } from 'antd';\nimport { CButton } from '../../../common/Button';\nimport { CForm, CFormItem } from '../../../blocks/Form';\nimport { CInput, CPasswordInput } from '../../../common/Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  useBreakpoint\n} = Grid;\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 8\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 16\n    }\n  }\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0\n    },\n    sm: {\n      span: 16,\n      offset: 4\n    },\n    lg: {\n      span: 16,\n      offset: 4\n    }\n  }\n};\nexport const Register = () => {\n  _s();\n  const [form] = CForm.useForm();\n  const screens = useBreakpoint();\n  const onFinish = values => {\n    console.log('Received values of form: ', values);\n  };\n  return /*#__PURE__*/_jsxDEV(CForm, {\n    ...formItemLayout,\n    form: form,\n    name: \"register\",\n    onFinish: onFinish,\n    style: {\n      minWidth: screens.xs ? '100%' : '500px'\n    },\n    scrollToFirstError: true,\n    children: [/*#__PURE__*/_jsxDEV(CFormItem, {\n      name: \"email\",\n      label: \"E-mail\",\n      rules: [{\n        type: 'email',\n        message: 'The input is not valid E-mail!'\n      }, {\n        required: true,\n        message: 'Please input your E-mail!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(CInput, {\n        \"aria-label\": \"Email input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CFormItem, {\n      name: \"password\",\n      label: \"Password\",\n      rules: [{\n        required: true,\n        message: 'Please input your password!'\n      }],\n      hasFeedback: true,\n      children: /*#__PURE__*/_jsxDEV(CPasswordInput, {\n        \"aria-label\": \"Password input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CFormItem, {\n      name: \"confirm\",\n      label: \"Confirm Password\",\n      dependencies: ['password'],\n      hasFeedback: true,\n      rules: [{\n        required: true,\n        message: 'Please confirm your password!'\n      }, ({\n        getFieldValue\n      }) => ({\n        validator(_, value) {\n          if (!value || getFieldValue('password') === value) {\n            return Promise.resolve();\n          }\n          return Promise.reject(new Error('The new password that you entered do not match!'));\n        }\n      })],\n      children: /*#__PURE__*/_jsxDEV(CPasswordInput, {\n        \"aria-label\": \"Password input conformation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CFormItem, {\n      ...tailFormItemLayout,\n      children: /*#__PURE__*/_jsxDEV(CButton, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(Register, \"IltJR4Fv8BWzErPT6d3GjErXVWg=\", false, function () {\n  return [CForm.useForm, useBreakpoint];\n});\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","Grid","CButton","CForm","CFormItem","CInput","CPasswordInput","jsxDEV","_jsxDEV","useBreakpoint","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","lg","Register","_s","form","useForm","screens","onFinish","values","console","log","name","style","minWidth","scrollToFirstError","children","label","rules","type","message","required","fileName","_jsxFileName","lineNumber","columnNumber","hasFeedback","dependencies","getFieldValue","validator","_","value","Promise","resolve","reject","Error","htmlType","_c","$RefreshReg$"],"sources":["/Users/natallia_smirnova/WebstormProjects/Budget_frontend/budget_frontend/budget-frontend/src/features/Auth/Register/Register.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n    Grid\n} from 'antd';\nimport {CButton} from '../../../common/Button';\nimport {CForm, CFormItem} from '../../../blocks/Form';\nimport {CInput, CPasswordInput} from '../../../common/Input'\n\nconst { useBreakpoint } = Grid;\n\ninterface DataNodeType {\n    value: string;\n    label: string;\n    children?: DataNodeType[];\n}\n\ninterface RegisterFormValues {\n    email: string;\n    password: string;\n    confirm: string;\n}\n\nconst formItemLayout = {\n    labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n    },\n    wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n    },\n};\n\nconst tailFormItemLayout = {\n    wrapperCol: {\n        xs: { span: 24, offset: 0 },\n        sm: { span: 16, offset: 4 },\n        lg: { span: 16, offset: 4 },\n    },\n};\n\nexport const Register: React.FC = () => {\n    const [form] = CForm.useForm();\n    const screens = useBreakpoint()\n\n    const onFinish = (values: RegisterFormValues) => {\n        console.log('Received values of form: ', values);\n    };\n    return (\n        <CForm\n            {...formItemLayout}\n            form={form}\n            name=\"register\"\n            onFinish={onFinish}\n            style={{ minWidth: screens.xs ? '100%' : '500px' }}\n            scrollToFirstError\n        >\n            <CFormItem\n                name=\"email\"\n                label=\"E-mail\"\n                rules={[\n                    {\n                        type: 'email',\n                        message: 'The input is not valid E-mail!',\n                    },\n                    {\n                        required: true,\n                        message: 'Please input your E-mail!',\n                    },\n                ]}\n            >\n                <CInput aria-label=\"Email input\"/>\n            </CFormItem>\n\n            <CFormItem\n                name=\"password\"\n                label=\"Password\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input your password!',\n                    },\n                ]}\n                hasFeedback\n            >\n                <CPasswordInput aria-label=\"Password input\"/>\n            </CFormItem>\n\n            <CFormItem\n                name=\"confirm\"\n                label=\"Confirm Password\"\n                dependencies={['password']}\n                hasFeedback\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please confirm your password!',\n                    },\n                    ({ getFieldValue }) => ({\n                        validator(_, value) {\n                            if (!value || getFieldValue('password') === value) {\n                                return Promise.resolve();\n                            }\n                            return Promise.reject(new Error('The new password that you entered do not match!'));\n                        },\n                    }),\n                ]}\n            >\n                <CPasswordInput aria-label=\"Password input conformation\"/>\n            </CFormItem>\n\n            <CFormItem {...tailFormItemLayout}>\n                <CButton type=\"primary\" htmlType=\"submit\">\n                    Register\n                </CButton>\n            </CFormItem>\n        </CForm>\n    );\n};\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}